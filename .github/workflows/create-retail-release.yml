name: Create Release

on:
  workflow_dispatch:

jobs:
  release:
    name: Package and Release Addon
    runs-on: ubuntu-latest

    env:
      ADDON_VERSION: ${{ vars.ADDON_VERSION }}
      ADDON_NAME: PatchNotesDelivered

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Create Release
        id: create_release
        run: |
          echo "Fetching local game version/build"
          python .github/scripts/create_release.py

      - name: Set full version string
        id: versioning
        run: |
          RELEASE_TAG="release-v${ADDON_VERSION}-retail-${{ steps.create_release.outputs.local_game_version_build_hf }}"
          echo "release_tag=${RELEASE_TAG}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Zip addon folder
        run: |
          mkdir dist
          zip -r "dist/${{ env.ADDON_NAME }}-${{ steps.versioning.outputs.release_tag }}.zip" "${{ env.ADDON_NAME }}/"

      - name: Wait for file system to sync
        run: sleep 5
        shell: bash

      - name: Debug Zipped File
        run: |
          echo "Listing contents of dist/:"
          ls -la dist/
          echo "Attempting to list contents of the generated ZIP file:"
          # Use 'unzip -l' to list contents, which also performs a basic integrity check
          # The '|| true' allows the workflow to continue even if unzip -l fails,
          # so you can see the error in the logs.
          unzip -l "dist/${{ env.ADDON_NAME }}-${{ steps.versioning.outputs.release_tag }}.zip" || true
          echo "Attempting to extract the generated ZIP file to a temporary directory:"
          mkdir /tmp/test_unzip
          unzip "dist/${{ env.ADDON_NAME }}-${{ steps.versioning.outputs.release_tag }}.zip" -d /tmp/test_unzip || true
          echo "Contents of extracted temporary directory:"
          ls -laR /tmp/test_unzip || true
        shell: bash
      
      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "${{ steps.versioning.outputs.release_tag }}"
          git push origin "${{ steps.versioning.outputs.release_tag }}"

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # - name: Create GitHub release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: ${{ steps.versioning.outputs.release_tag }}
      #     name: ${{ steps.versioning.outputs.release_tag }}
      #     files: dist/${{ env.ADDON_NAME }}-${{ steps.versioning.outputs.release_tag }}.zip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.versioning.outputs.release_tag }}
          name: ${{ steps.versioning.outputs.release_tag }}
          artifacts: "dist/${{ env.ADDON_NAME }}-${{ steps.versioning.outputs.release_tag }}.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

  
