name: LLM Update Patch Notes

on:
  workflow_dispatch:
    inputs:
      notes_file:
        description: 'Notes file to update (e.g., patch-11.1.7.lua)'
        required: true
        default: 'patch-11.1.7.lua'
      scrape_url:
        description: 'URL to scrape for patch notes'
        required: true
        default: 'https://worldofwarcraft.blizzard.com/en-us/news/'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/scripts/requirements.txt

      - name: Scrape latest patch notes
        id: scrape
        run: |
          python .github/scripts/scrape_news.py "${{ github.event.inputs.scrape_url }}"
          if [ -f "scraped_content.txt" ]; then
            echo "scraped=true" >> $GITHUB_OUTPUT
          else
            echo "scraped=false" >> $GITHUB_OUTPUT
            echo "::error::Scraping failed, scraped_content.txt not found."
            exit 1
          fi

      - name: Generate formatted notes with LLM
        if: steps.scrape.outputs.scraped == 'true'
        id: llm_generate
        run: |
          NOTES_FILE_PATH="PatchNotesDelivered/notes/${{ github.event.inputs.notes_file }}"
          python .github/scripts/generate_patch_notes.py scraped_content.txt "$NOTES_FILE_PATH"
          echo "llm_run=true" >> $GITHUB_OUTPUT
        env:
          # You must add this as a secret in your repository settings
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Run build check and update build number
        id: check_build
        run: |
          NOTES_FILE="${{ github.event.inputs.notes_file }}"
          python .github/scripts/update_patch_notes.py "$NOTES_FILE"

      - name: Create Pull Request
        if: steps.check_build.outputs.updated == 'true' || steps.llm_generate.outputs.llm_run == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat: Update patch notes via LLM and build check"
          title: "ðŸ¤– Automated Patch Notes Update"
          body: |
            This PR was automatically generated by the LLM Update Patch Notes workflow.

            - Scraped notes from: `${{ github.event.inputs.scrape_url }}`
            - Updated game version to: `${{ steps.check_build.outputs.branch_name }}`
            - LLM was used to format and update the patch notes.

            Please review the changes carefully.
          branch: "feature/llm-patch-notes-${{ github.run_id }}"
          base: dev
          delete-branch: true
